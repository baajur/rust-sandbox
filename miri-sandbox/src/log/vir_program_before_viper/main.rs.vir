struct_predicate str(self);


struct_predicate ref$str(self){
  (acc(self.val_ref, write)) && ((acc(str(self.val_ref), write)) && (true))
}


struct_predicate u32(self){
  (acc(self.val_int, write)) && (true)
}


struct_predicate tuple3$ref$str$u32$u32(self){
  (acc(self.tuple_0, write)) && ((acc(ref$str(self.tuple_0), write)) && ((acc(self.tuple_1, write)) && ((acc(u32(self.tuple_1), write)) && ((acc(self.tuple_2, write)) && ((acc(u32(self.tuple_2), write)) && (true))))))
}


struct_predicate ref$tuple3$ref$str$u32$u32(self){
  (acc(self.val_ref, write)) && ((acc(tuple3$ref$str$u32$u32(self.val_ref), write)) && (true))
}


struct_predicate tuple0$(self){
  true
}


struct_predicate never(self);


method builtin$havoc_bool() returns (ret: Bool);

method builtin$havoc_int() returns (ret: Int);

method builtin$havoc_ref() returns (ret: Ref());

method m_main$$main$opensqu$0$closesqu$(0 args)
    returns (_0: Ref(tuple0$))
{
    __t0: Bool
  label start // 0
    // ========== start ==========
    // Name: "main::main"
    // Def path: "main::main[0]"
    // Span: /home/legokichi/Github/rust-snipets/miri-sandbox/src/main.rs:1:1: 3:2
    __t0 := copy false
    // Preconditions:
    inhale(Stmt) true
    inhale(Stmt) true
    inhale(Stmt) true
    inhale(Expr) true
    label pre
    Goto(cfg:1)
  label bb0 // 1
    // ========== bb0 ==========
    __t0 := copy true
    // [mir] StorageLive(_4)
    // [mir] StorageLive(_5)
    // [mir] _7 = promoted[0]
    // [mir] _5 = &'8s (*_7)
    // [mir] _4 = &'8s (*_5)
    // [mir] const std::rt::begin_panic(const "internal error: entered unreachable code", move _4) -> bb1
    // Rust panic - const "internal error: entered unreachable code"
    assert(Stmt) false
    Return
  label return // 2
    // ========== return ==========
    // Target of any 'return' statement.
    // Exhale postcondition
    // Fold predicates for &mut args and transfer borrow permissions to old
    // Fold the result
    obtain acc(tuple0$(_0), write)
    assert(Stmt) (tuple0$$inv<Ref(tuple0$),Bool>(_0)) && (true)
    exhale acc(tuple0$(_0), write)
    Return
  label end_of_method
}


